[{"D:\\food-delivery-app\\Frontend\\src\\index.js":"1","D:\\food-delivery-app\\Frontend\\src\\App.js":"2","D:\\food-delivery-app\\Frontend\\src\\Store\\CartProvider.js":"3","D:\\food-delivery-app\\Frontend\\src\\components\\Layout\\Header.js":"4","D:\\food-delivery-app\\Frontend\\src\\components\\Cart\\Cart.js":"5","D:\\food-delivery-app\\Frontend\\src\\components\\Meals\\AddMeals.js":"6","D:\\food-delivery-app\\Frontend\\src\\components\\Meals\\Meals.js":"7","D:\\food-delivery-app\\Frontend\\src\\components\\Login\\Login.js":"8","D:\\food-delivery-app\\Frontend\\src\\components\\Login\\Register.js":"9","D:\\food-delivery-app\\Frontend\\src\\components\\Order\\OrderDetail.js":"10","D:\\food-delivery-app\\Frontend\\src\\components\\Order\\Order.js":"11","D:\\food-delivery-app\\Frontend\\src\\axois.js":"12","D:\\food-delivery-app\\Frontend\\src\\Store\\Cart-Context.js":"13","D:\\food-delivery-app\\Frontend\\src\\components\\Layout\\Button.js":"14","D:\\food-delivery-app\\Frontend\\src\\components\\Meals\\MealsSummary.js":"15","D:\\food-delivery-app\\Frontend\\src\\components\\Cart\\Checkout.js":"16","D:\\food-delivery-app\\Frontend\\src\\components\\Layout\\HeaderButton.js":"17","D:\\food-delivery-app\\Frontend\\src\\components\\Cart\\CartItem.js":"18","D:\\food-delivery-app\\Frontend\\src\\components\\Order\\OrderDetailItems.js":"19","D:\\food-delivery-app\\Frontend\\src\\components\\Order\\Orderitem.js":"20","D:\\food-delivery-app\\Frontend\\src\\components\\Meals\\AvailableMeals.js":"21","D:\\food-delivery-app\\Frontend\\src\\Helper\\localStorageHelper.js":"22","D:\\food-delivery-app\\Frontend\\src\\components\\UI\\Modal.js":"23","D:\\food-delivery-app\\Frontend\\src\\components\\UI\\Card.js":"24","D:\\food-delivery-app\\Frontend\\src\\components\\hooks\\UseInput.js":"25","D:\\food-delivery-app\\Frontend\\src\\components\\Cart\\CartIcon.js":"26","D:\\food-delivery-app\\Frontend\\src\\components\\Meals\\Mealtems\\MealIteams.js":"27","D:\\food-delivery-app\\Frontend\\src\\components\\Meals\\Mealtems\\MealItemForm.js":"28","D:\\food-delivery-app\\Frontend\\src\\components\\Meals\\Mealtems\\Input.js":"29"},{"size":179,"mtime":1667711338660,"results":"30","hashOfConfig":"31"},{"size":1397,"mtime":1668417058001,"results":"32","hashOfConfig":"31"},{"size":5921,"mtime":1668493569645,"results":"33","hashOfConfig":"31"},{"size":2255,"mtime":1668422810688,"results":"34","hashOfConfig":"31"},{"size":2550,"mtime":1668427447908,"results":"35","hashOfConfig":"31"},{"size":5424,"mtime":1668423154854,"results":"36","hashOfConfig":"31"},{"size":241,"mtime":1667713945929,"results":"37","hashOfConfig":"31"},{"size":5518,"mtime":1668493634016,"results":"38","hashOfConfig":"31"},{"size":6773,"mtime":1668110176240,"results":"39","hashOfConfig":"31"},{"size":1474,"mtime":1668434927815,"results":"40","hashOfConfig":"31"},{"size":1439,"mtime":1668420874298,"results":"41","hashOfConfig":"31"},{"size":217,"mtime":1668512564381,"results":"42","hashOfConfig":"31"},{"size":349,"mtime":1668140406855,"results":"43","hashOfConfig":"31"},{"size":306,"mtime":1668139520460,"results":"44","hashOfConfig":"31"},{"size":525,"mtime":1667713260932,"results":"45","hashOfConfig":"31"},{"size":3428,"mtime":1668401622390,"results":"46","hashOfConfig":"31"},{"size":1097,"mtime":1668088619645,"results":"47","hashOfConfig":"31"},{"size":643,"mtime":1668000970174,"results":"48","hashOfConfig":"31"},{"size":509,"mtime":1668417631559,"results":"49","hashOfConfig":"31"},{"size":847,"mtime":1668434891585,"results":"50","hashOfConfig":"31"},{"size":1677,"mtime":1668105988303,"results":"51","hashOfConfig":"31"},{"size":812,"mtime":1668074452786,"results":"52","hashOfConfig":"31"},{"size":721,"mtime":1667803651980,"results":"53","hashOfConfig":"31"},{"size":174,"mtime":1667798833143,"results":"54","hashOfConfig":"31"},{"size":720,"mtime":1667975359279,"results":"55","hashOfConfig":"31"},{"size":523,"mtime":1667712612037,"results":"56","hashOfConfig":"31"},{"size":960,"mtime":1668401468876,"results":"57","hashOfConfig":"31"},{"size":1111,"mtime":1668435056082,"results":"58","hashOfConfig":"31"},{"size":323,"mtime":1667808596623,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"qtce8e",{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"D:\\food-delivery-app\\Frontend\\src\\index.js",[],["129","130"],"D:\\food-delivery-app\\Frontend\\src\\App.js",[],"D:\\food-delivery-app\\Frontend\\src\\Store\\CartProvider.js",["131","132","133","134","135","136","137","138","139","140"],"import React, { useContext, useEffect, useReducer, useState } from \"react\";\r\nimport axios from \"../axois\";\r\nimport { getItemWithExpiry } from \"../Helper/localStorageHelper\";\r\nimport CartContext from \"./Cart-Context\";\r\n\r\n\r\n\r\n\r\n\r\nconst CartProvider = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  \r\n  const add = async (item) => {\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        \"/Cart/AddToCart.php\",\r\n        { ...item },\r\n        {\r\n          headers: {\r\n            Authorization: getItemWithExpiry(\"token\"),\r\n          },\r\n        }\r\n      );\r\n     fetch()\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const remove = async (id) => {\r\n    try {\r\n      const res = await axios.post(\r\n        \"/Cart/RemoveFromCart.php\",\r\n        { meal_id:id },\r\n        {\r\n          headers: {\r\n            Authorization: getItemWithExpiry(\"token\"),\r\n          },\r\n        }\r\n      );\r\n        fetch();\r\n      \r\n    } catch (err) {\r\n      \r\n    }\r\n  };\r\n  \r\n \r\n  useEffect(()=>{\r\n    if(getItemWithExpiry(\"isLoggedIn\")){\r\n      \r\n    fetch();\r\n    }\r\n  },[]);\r\n  \r\n  if(!isLoading){}\r\n  const defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0,\r\n    \r\n    isLoggedIn: getItemWithExpiry(\"isLoggedIn\"),\r\n    token: getItemWithExpiry(\"token\"),\r\n    role: getItemWithExpiry('role'),\r\n  };\r\n\r\n  const fetch = async () => {\r\n  \r\n    try {\r\n      const res = await axios.get(\"/Cart/ViewCart.php\", {\r\n        headers: {\r\n          Authorization: getItemWithExpiry(\"token\"),\r\n        },\r\n      });\r\n      const meals = res.data.meals;\r\n      console.log(res);\r\n      let totalPrice = 0\r\n      let mealsoutput = [];\r\n      for (let i = 0; i < meals.length; i++) {\r\n        var filteredMeals = {\r\n          id: meals[i].meal_id,\r\n          name: meals[i].meal_name,\r\n          amount: parseInt(meals[i].amount),\r\n          price: parseInt(meals[i].price),\r\n        };\r\n        totalPrice += (filteredMeals.price * filteredMeals.amount);\r\n        mealsoutput = [...mealsoutput, filteredMeals];\r\n      }\r\n      return getItems(mealsoutput, totalPrice);\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  };\r\n \r\n  const cartReducer = (state, action) => {\r\n      console.log(state);\r\n    if (action.type == \"ADD\") {\r\n      const existingCartItemIndex = state.items.findIndex(\r\n        (item) => item.id === action.item.id\r\n      );\r\n      const updatedTotalAmount =\r\n        state.totalAmount + action.item.price * action.item.amount;\r\n      const existingCartItem = state.items[existingCartItemIndex];\r\n      let updatedItem;\r\n      let updatedItems;\r\n      if (existingCartItem) {\r\n        updatedItem = {\r\n          ...existingCartItem,\r\n          amount: existingCartItem.amount + action.item.amount,\r\n        };\r\n        updatedItems = [...state.items];\r\n        updatedItems[existingCartItemIndex] = updatedItem;\r\n      } else {\r\n        updatedItem = { ...action.item };\r\n        updatedItems = state.items.concat(updatedItem);\r\n      }\r\n      return { ...state, items: updatedItems, totalAmount: updatedTotalAmount };\r\n    }\r\n    if (action.type === \"REMOVE\") {\r\n      const existingCartItemIndex = state.items.findIndex(\r\n        (item) => item.id === action.id\r\n      );\r\n      const existingItem = state.items[existingCartItemIndex];\r\n      const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n      let updatedItems;\r\n      if (existingItem.amount === 1) {\r\n        updatedItems = state.items.filter((item) => item.id !== action.id);\r\n      } else {\r\n        const updatedItem = {\r\n          ...existingItem,\r\n          amount: existingItem.amount - 1,\r\n        };\r\n        updatedItems = [...state.items];\r\n        updatedItems[existingCartItemIndex] = updatedItem;\r\n      }\r\n      return { ...state, items: updatedItems, totalAmount: updatedTotalAmount };\r\n    }\r\n    if (action.type == \"CLEAR\") {\r\n      return defaultCartState;\r\n    }\r\n    if (action.type == \"LOGIN\") {\r\n      return {\r\n        ...state,\r\n        role: action.role,\r\n        token: action.tk,\r\n        isLoggedIn: true,\r\n      };\r\n    }\r\n    if (action.type == \"FETCH\") {\r\n      return {\r\n        ...state,\r\n        items: action.items,\r\n        totalAmount: action.totalPrice\r\n      };\r\n    }\r\n\r\n    if(action.type='LOGOUT'){\r\n      return  defaultCartState;\r\n    }\r\n    return defaultCartState;\r\n  };\r\n  \r\n  \r\n    const [cartState, dispatchCartAction] = useReducer(\r\n      cartReducer,\r\n      defaultCartState\r\n    );\r\n  \r\n  const addItemToCartHandler = (item) => {\r\n    if(getItemWithExpiry(\"isLoggedIn\")){\r\n      add(item);\r\n    }\r\n    dispatchCartAction({ type: \"ADD\", item: item });\r\n  };\r\n\r\n  const removeItemFromCartHandler = (id) => {\r\n    if(getItemWithExpiry(\"isLoggedIn\")){\r\n      remove(id);\r\n    }\r\n    dispatchCartAction({ type: \"REMOVE\", id: id });\r\n  };\r\n\r\n  const clearCartHandler = () => {\r\n    dispatchCartAction({ type: \"CLEAR\" });\r\n  };\r\n\r\n  const LoggingInHandler = (tk, role) => {\r\n    fetch();\r\n    dispatchCartAction({ type: \"LOGIN\", tk: tk, role: role });\r\n  };\r\n\r\n  const LogoutHandler=()=>{\r\n    dispatchCartAction({ type: \"LOGOUT\" });\r\n  }\r\n\r\n  const LoadHandler = (load) => {\r\n    dispatchCartAction({ type: \"LOAD\", load: load });\r\n  };\r\n\r\n  \r\n\r\n  const getItems = (items, totalPrice) => {\r\n    dispatchCartAction({ type: \"FETCH\", items, totalPrice });\r\n  }\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    isLoggedIn: cartState.isLoggedIn,\r\n    token: cartState.token,\r\n    role:cartState.role,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n    clearCart: clearCartHandler,\r\n    LoggingIn: LoggingInHandler,\r\n    fetch: fetch,\r\n    logout:LogoutHandler,\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n","D:\\food-delivery-app\\Frontend\\src\\components\\Layout\\Header.js",["141"],"import React, { useContext, useState } from \"react\";\r\nimport mealImg from \"../../assests/meals.jpg\";\r\nimport { Button } from \"./Button\";\r\nimport classes from \"./Header.module.css\";\r\nimport { HeaderButton } from \"./HeaderButton\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport CartContext from \"../../Store/Cart-Context\";\r\nexport const Header = (props) => {\r\n  const navigate = useNavigate();\r\n  const [open, setOpen] = useState(false);\r\n  const handleNavigate = () => {\r\n    navigate(\"/login\");\r\n  };\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"role\");\r\n    localStorage.removeItem(\"isLoggedIn\");\r\n    localStorage.removeItem(\"token\");\r\n    Cartctx.logout();\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(!open);\r\n  };\r\n  const Cartctx = useContext(CartContext);\r\n  const { isLoggedIn, role } = Cartctx;\r\n  console.log(role);\r\n  return (\r\n    <>\r\n      <header className={classes.header}>\r\n        <h1 onClick={() => navigate(\"/\")}>Tomato Meals</h1>\r\n        <HeaderButton onClick={props.onShowCart} />\r\n\r\n      {isLoggedIn &&\r\n        <div className={classes.dropdown}>\r\n          <button onClick={handleOpen}>\r\n            <p style={{ color: \"white\" }}>Accounts</p>\r\n          </button>\r\n          {open ? (\r\n            <ul className={classes.menu}>\r\n              {role === \"ADMIN\" && (\r\n                <li className={classes[\"menu-item\"]}>\r\n                  <button onClick={() => {\r\n                    navigate(\"/addFood\");\r\n                    handleOpen();\r\n                  }}>Add New Food</button>\r\n                </li>\r\n              )}\r\n              <li className={classes[\"menu-item\"]}>\r\n                <button\r\n                  onClick={() => {\r\n                    navigate(\"/order\");\r\n                    handleOpen();\r\n                  }}\r\n                >\r\n                  View order\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          ) : null}\r\n        </div>\r\n}\r\n        {!isLoggedIn && <Button name={\"Login\"} onPress={handleNavigate} />}\r\n        {isLoggedIn && <Button name={\"Logout\"} onPress={handleLogout} />}\r\n      </header>\r\n      <div className={classes[\"main-image\"]}>\r\n        <img src={mealImg} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","D:\\food-delivery-app\\Frontend\\src\\components\\Cart\\Cart.js",["142","143"],"import classes from \"./Cart.module.css\";\r\n\r\nimport React, { useContext, useState } from \"react\";\r\nimport Model from \"../UI/Modal\";\r\nimport CartContext from \"../../Store/Cart-Context\";\r\nimport CartItem from \"./CartItem\";\r\nimport Checkout from \"./Checkout\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getItemWithExpiry } from \"../../Helper/localStorageHelper\";\r\nimport axios from \"../../axois\";\r\n\r\nconst Cart = (props) => {\r\n  const navigate = useNavigate();\r\n  const cartCtx = useContext(CartContext);\r\n  const TotalAmount = `$ ${parseInt(cartCtx.totalAmount).toFixed(2)}`;\r\n  const [checkout,setCheckout]=useState(false);\r\n  \r\n\r\n  const cartItemRemoveHandler = (id) => {\r\n    cartCtx.removeItem(id);\r\n  };\r\n\r\n  const cartItemAddHandler = (item) => {\r\n    cartCtx.addItem({...item,amount:1});\r\n  };\r\n\r\n  const submitOrderHandler =async (userData)=> {\r\n    const orderData={...userData,items:cartCtx.items,totalPrice:cartCtx.totalAmount};\r\n    try {\r\n      const res = await axios.post(\r\n        \"/Order/AddOrder.php\",\r\n        orderData,\r\n        {\r\n          headers: {\r\n            Authorization: getItemWithExpiry(\"token\"),\r\n          },\r\n        }\r\n      );\r\n      const status= res.data.status;\r\n      if(res.data.status==1){\r\n          props.onHideCart();\r\n          cartCtx.clearCart();\r\n          navigate(\"/\");\r\n\r\n      }\r\n\r\n      \r\n    } catch (error) {\r\n      \r\n    }\r\n   \r\n  };\r\n  \r\n  const handleOrderBtn =()=>{\r\n    if(getItemWithExpiry(\"isLoggedIn\")){\r\n    setCheckout(true);\r\n    }else{\r\n      navigate(\"/login\")\r\n    }\r\n  }\r\n  const cartitems = cartCtx.items.map((item) => (\r\n    <CartItem\r\n      key={item.id}\r\n      name={item.name}\r\n      amount={item.amount}\r\n      price={item.price}\r\n      onRemove={cartItemRemoveHandler.bind(null,item.id)}\r\n      onAdd={cartItemAddHandler.bind(null, item)}\r\n      \r\n    />\r\n  ));\r\n  \r\n  const hasItems = cartCtx.items.length > 0;\r\n  return (\r\n    <Model>\r\n      <ul className={classes[\"cart-items\"]}>{cartitems}</ul>\r\n      <div className={classes.total}>\r\n        <span>Total Amount</span>\r\n        <span>{TotalAmount}</span>\r\n      </div>\r\n       { checkout && <Checkout onConfirm={ submitOrderHandler} onClick={props.onHideCart}/>}\r\n       {!checkout &&\r\n      <div className={classes.actions}>\r\n        <button className={classes[\"button--alt\"]} onClick={props.onHideCart}>\r\n          Close\r\n        </button>\r\n        {hasItems && <button className={classes.button} onClick={handleOrderBtn}>Order</button>}\r\n      </div>}\r\n    </Model>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","D:\\food-delivery-app\\Frontend\\src\\components\\Meals\\AddMeals.js",["144","145","146"],"import React, { useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"../../axois\";\r\nimport { getItemWithExpiry } from \"../../Helper/localStorageHelper\";\r\nimport CartContext from \"../../Store/Cart-Context\";\r\n\r\nimport useInput from \"../hooks/UseInput\";\r\nimport classes from \"./AddMeals.module.css\";\r\n\r\n\r\nconst AddMeals = () => {\r\n  const navigate = useNavigate();\r\n  const ctx = useContext(CartContext);\r\n  const {\r\n    value: enteredName,\r\n    isValid: enteredNameIsValid,\r\n    hasError: InputNameHasError,\r\n    valueChangeHandler: nameChangedHandler,\r\n    inputBlurHandler: nameBlurHandler,\r\n    reset: resetNameInput,\r\n  } = useInput((value) => value.trim() !== \"\");\r\n\r\n  const {\r\n    value: enteredDescription,\r\n    isValid: enteredDescriptionIsValid,\r\n    hasError: InputDescriptionHasError,\r\n    valueChangeHandler: descriptionChangedHandler,\r\n    inputBlurHandler: descriptionBlurHandler,\r\n    reset: resetDescriptionInput,\r\n  } = useInput((value) => value.trim() !== \"\");\r\n\r\n  const {\r\n    value: enteredPrice,\r\n    isValid: enteredPriceIsValid,\r\n    hasError: InputPriceHasError,\r\n    valueChangeHandler: priceChangedHandler,\r\n    inputBlurHandler: priceBlurHandler,\r\n    reset: resetPriceInput,\r\n  } = useInput((value) => value.trim() !== \"\");\r\n\r\n  const add = async () => {\r\n    const item={\r\n      name:enteredName,\r\n      description:enteredDescription,\r\n      price:enteredPrice\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        \"/Meals/AddMeals.php\",\r\n        { ...item },\r\n        {\r\n          headers: {\r\n            Authorization: getItemWithExpiry(\"token\"),\r\n          },\r\n        }\r\n      );\r\n      console.log(res.data.status);\r\n\r\n      if(res.data.status===1){\r\n          navigate(\"/\");\r\n      }else{\r\n        throw new Error(res.data.message)\r\n      }\r\n\r\n      console.log(res);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n\r\nconst submitHandler=(e)=>{\r\n  e.preventDefault();\r\n  if(enteredNameIsValid && enteredPriceIsValid && enteredDescriptionIsValid){\r\n    console.log(enteredName);\r\n    console.log(enteredDescription);\r\n    console.log(enteredPrice);\r\n    resetDescriptionInput();\r\n    resetNameInput();\r\n    resetPriceInput();\r\n    add();\r\n  }\r\n}\r\n\r\nif(ctx.role==='ADMIN'){\r\n  return (\r\n    <div className={classes.limiter}>\r\n      <div className={classes[\"container-login100\"]}>\r\n        <div className={classes[\"wrap-login100\"]}>\r\n          <div className={classes[\"login100-form-title\"]}>\r\n            <span className={classes[\"login100-form-title-1\"]}>New FooD</span>\r\n          </div>\r\n\r\n          <form className={classes[\"login100-form\"]} onSubmit={submitHandler}>\r\n            <div>\r\n              <div\r\n                className={`${classes[\"wrap-input100\"]}  ${classes[\"m-b-26\"]}`}\r\n              >\r\n                <span className={classes[\"label-input100\"]}>Food Name</span>\r\n                <input\r\n                  className={classes[\"input100\"]}\r\n                  type=\"text\"\r\n                  name=\"foodName\"\r\n                  placeholder=\"Enter Food Name\"\r\n                  onChange={nameChangedHandler}\r\n                  onBlur={nameBlurHandler}\r\n                  value={enteredName}\r\n                />\r\n                <span className={classes[\"focus-input100\"]}></span>\r\n              </div>\r\n              <div\r\n                className={`${classes[\"wrap-input100\"]}  ${classes[\"m-b-26\"]}`}\r\n              >\r\n                <span className={classes[\"label-input100\"]}>Description</span>\r\n                <input\r\n                  className={classes[\"input100\"]}\r\n                  type=\"text\"\r\n                  name=\"Description\"\r\n                  placeholder=\"Description\"\r\n                  onChange={descriptionChangedHandler}\r\n                  onBlur={descriptionBlurHandler}\r\n                  value={enteredDescription}\r\n                />\r\n                <span className={classes[\"focus-input100\"]}></span>\r\n              </div>\r\n              <div\r\n                className={`${classes[\"wrap-input100\"]}  ${classes[\"m-b-26\"]}`}\r\n              >\r\n                <span className={classes[\"label-input100\"]}>Price</span>\r\n                <input\r\n                  className={classes[\"input100\"]}\r\n                  type=\"text\"\r\n                  name=\"Price\"\r\n                  placeholder=\"Enter Price\"\r\n                  onChange={priceChangedHandler}\r\n                  onBlur={priceBlurHandler}\r\n                  value={enteredPrice}\r\n                />\r\n                <span className={classes[\"focus-input100\"]}></span>\r\n              </div>\r\n\r\n              <div\r\n                className={`${classes[\"flex-sb-m\"]} ${classes[\"w-full\"]} ${classes[\"p-b-30\"]}`}\r\n              ></div>\r\n\r\n              <div className={classes[\"container-login100-form-btn\"]}>\r\n                <button class={classes[\"login100-form-btn\"]}>Add Food</button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}else{\r\n\r\n  return (\r\n    <div className={classes.limiter}>\r\n      <div className={classes[\"container-login100\"]}>\r\n        <div className={classes[\"wrap-login100\"]}>\r\n          <div className={classes[\"login100-form-title\"]}>\r\n            <span className={classes[\"login100-form-title-1\"]}>Access Denied</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n\r\n}\r\n\r\n\r\n}\r\n\r\nexport default AddMeals;\r\n","D:\\food-delivery-app\\Frontend\\src\\components\\Meals\\Meals.js",[],"D:\\food-delivery-app\\Frontend\\src\\components\\Login\\Login.js",["147","148","149"],"import React, { useContext, useState } from \"react\";\r\nimport \"./Login.css\";\r\nimport LoginImg from \"../../assests/img.png\";\r\nimport useInput from \"../hooks/UseInput\";\r\nimport { FaInstalod } from \"react-icons/fa\";\r\nimport { FaLock } from \"react-icons/fa\";\r\nimport axios from \"../../axois\";\r\nimport CartContext from \"../../Store/Cart-Context\";\r\nimport { getItemWithExpiry, setItemWithExpiry } from \"../../Helper/localStorageHelper\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst push = async (item,token) => {\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      \"/Cart/AddToCart.php\",\r\n      { ...item },\r\n      {\r\n        headers: {\r\n          Authorization: token\r\n        },\r\n      }\r\n    );\r\n    \r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\nconst Login = () => {\r\n  const ctx = useContext(CartContext);\r\n  const [error,setError]=useState(false);\r\n  const navigate = useNavigate();\r\n    const [errorMessage,setErrorMessage]=useState(null);\r\n  const {\r\n    value: enteredPassword,\r\n    isValid: enteredPasswordIsValid,\r\n    hasError: InputPasswordHasError,\r\n    valueChangeHandler: PasswordChangedHandler,\r\n    inputBlurHandler: PasswordBlurHandler,\r\n    reset: resetPasswordInput,\r\n  } = useInput((value) => value.trim() !== \"\");\r\n\r\n  const {\r\n    value: enteredEmail,\r\n    isValid: enteredEmailIsValid,\r\n    hasError: EmalInputHasError,\r\n    valueChangeHandler: emailChangedHandler,\r\n    inputBlurHandler: emailBlurHandler,\r\n    reset: resetEmailInput,\r\n  } = useInput((value) => value.trim() !== \"\" && value.includes(\"@\"));\r\n\r\n  const login = async () => {\r\n    const user = {\r\n      email: enteredEmail,\r\n      password: enteredPassword,\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\"/AuthUser/Login.php\", user);\r\n     const status=res.data.status;\r\n     console.log(res);\r\n     console.log(status)\r\n     if(!status){\r\n      setErrorMessage(res.data.message);\r\n      throw new Error(res.data.message);\r\n     }else{\r\n      setErrorMessage(res.data.message);\r\n      setError(false);\r\n    \r\n      const token=res.data.jwt;\r\n      const role=res.data.role;\r\n      if(ctx.items.length>0 && !ctx.isLoggedIn){\r\n      ctx.items.map((item)=>\r\n        push(item,token)\r\n      );\r\n      ctx.clearCart();\r\n      }\r\n      setItemWithExpiry(\"role\",role);\r\n      setItemWithExpiry(\"token\",token);\r\n      setItemWithExpiry(\"isLoggedIn\",true);\r\n      ctx.LoggingIn(token,role);\r\n      ctx.fetch();\r\n     }\r\n    } catch (err) {\r\n      setError(true);\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (enteredPasswordIsValid && enteredEmailIsValid) {\r\n      console.log(enteredPassword);\r\n      console.log(enteredEmail);\r\n      resetEmailInput();\r\n      resetPasswordInput();\r\n      login();\r\n      navigate(\"/\");\r\n    } else {\r\n      console.log(\"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"limiter\">\r\n      <div className=\"container-login100\">\r\n        <div className=\"wrap-login100\">\r\n          <div className=\"login100-pic js-tilt\" data-tilt>\r\n            <img src={LoginImg} alt=\"IMG\" />\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit} className=\"login100-form validate-form\">\r\n            <span className=\"login100-form-title\">Member Login</span>\r\n            {\r\n            error && <span className=\"login100-form-title\">{errorMessage}</span>\r\n           }\r\n\r\n            <div\r\n              className=\"wrap-input100 validate-input\"\r\n              data-validate=\"Valid email is required: ex@abc.xyz\"\r\n            >\r\n              <input\r\n                className=\"input100\"\r\n                type=\"text\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                onBlur={emailBlurHandler}\r\n                onChange={emailChangedHandler}\r\n                value={enteredEmail}\r\n              />\r\n              <span className=\"focus-input100\"></span>\r\n              <span className=\"symbol-input100\">\r\n                <FaInstalod />\r\n              </span>\r\n            </div>\r\n            {EmalInputHasError && (\r\n              <span className=\"txt1\" style={{ color: \"red\" }}>\r\n                Email is Required\r\n              </span>\r\n            )}\r\n            <div\r\n              className=\"wrap-input100 validate-input\"\r\n              data-validate=\"Password is required\"\r\n            >\r\n              <input\r\n                className=\"input100\"\r\n                type=\"password\"\r\n                name=\"pass\"\r\n                placeholder=\"Password\"\r\n                onBlur={PasswordBlurHandler}\r\n                onChange={PasswordChangedHandler}\r\n                value={enteredPassword}\r\n              />\r\n              <span className=\"focus-input100\"></span>\r\n              <span className=\"symbol-input100\">\r\n                <FaLock />\r\n              </span>\r\n            </div>\r\n\r\n            {InputPasswordHasError && (\r\n              <span className=\"txt1\" style={{ color: \"red\" }}>\r\n                Password is Required\r\n              </span>\r\n            )}\r\n\r\n            <div className=\"container-login100-form-btn\">\r\n              <button className=\"login100-form-btn\">Login</button>\r\n            </div>\r\n\r\n            <div className=\"text-center p-t-12\">\r\n              <span className=\"txt1\">Don't have an acount?</span>\r\n              <a className=\"txt2\" onClick={()=>navigate(\"/register\")}>\r\n                Create your Account\r\n              </a>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\food-delivery-app\\Frontend\\src\\components\\Login\\Register.js",["150"],"import React, { useState } from \"react\";\r\nimport \"./Login.css\";\r\nimport LoginImg from \"../../assests/img.png\";\r\nimport useInput from \"../hooks/UseInput\";\r\nimport { FaInstalod } from \"react-icons/fa\";\r\nimport { FaLock } from \"react-icons/fa\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport axios from \"../../axois\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Register = () => {\r\n    const [error,setError]=useState(false);\r\n    const [errorMessage,setErrorMessage]=useState(null);\r\n    const navigate = useNavigate();\r\n  const {\r\n    value: enteredPassword,\r\n    isValid: enteredPasswordIsValid,\r\n    hasError: InputPasswordHasError,\r\n    valueChangeHandler: PasswordChangedHandler,\r\n    inputBlurHandler: PasswordBlurHandler,\r\n    reset: resetPasswordInput,\r\n  } = useInput((value) => value.trim() !== \"\");\r\n\r\n  const {\r\n    value: enteredVerifyPassword,\r\n    isValid: enteredVerifyPasswordIsValid,\r\n    hasError: InputVerifyPasswordHasError,\r\n    valueChangeHandler: verifyPasswordChangedHandler,\r\n    inputBlurHandler: verifyPasswordBlurHandler,\r\n    reset: resetVerifyPasswordInput,\r\n  } = useInput((value) => value.trim() !== \"\" && value === enteredPassword);\r\n\r\n  const {\r\n    value: enteredEmail,\r\n    isValid: enteredEmailIsValid,\r\n    hasError: emailInputHasError,\r\n    valueChangeHandler: emailChangedHandler,\r\n    inputBlurHandler: emailBlurHandler,\r\n    reset: resetEmailInput,\r\n  } = useInput((value) => value.trim() !== \"\" && value.includes(\"@\"));\r\n\r\n  const {\r\n    value: enteredName,\r\n    isValid: enteredNameIsValid,\r\n    hasError: nameInputHasError,\r\n    valueChangeHandler: nameChangedHandler,\r\n    inputBlurHandler: nameBlurHandler,\r\n    reset: resetNameInput,\r\n  } = useInput((value) => value.trim() !== \"\");\r\n\r\n  const reg = async () => {\r\n    const user = {\r\n      Userid:uuidv4(),\r\n      name: enteredName,\r\n      email: enteredEmail,\r\n      password: enteredPassword,\r\n    };\r\n    try {\r\n      const res = await axios.post(\r\n        \"/AuthUser/AddUser.php\",\r\n        user,\r\n      );\r\n      const status= res.data.status;\r\n      if(!status){\r\n    setErrorMessage(res.data.message);\r\n      throw new Error(res.data.message);\r\n      }else{\r\n        navigate(\"/login\");\r\n      }\r\n    } catch (err) {\r\n        setError(true);\r\n        console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      enteredPasswordIsValid &&\r\n      enteredEmailIsValid &&\r\n      enteredNameIsValid &&\r\n      enteredVerifyPasswordIsValid\r\n    ) {\r\n      resetEmailInput();\r\n      resetPasswordInput();\r\n      resetNameInput();\r\n      resetVerifyPasswordInput();\r\n      reg();\r\n    } \r\n  };\r\n\r\n  return (\r\n    <div className=\"limiter\">\r\n      <div className=\"container-login100\">\r\n        <div className=\"wrap-login100\">\r\n          <div className=\"login100-pic js-tilt\" data-tilt>\r\n            <img src={LoginImg} alt=\"IMG\" />\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit} className=\"login100-form validate-form\">\r\n            <span className=\"login100-form-title\">Member Register</span>\r\n           {\r\n            error && <span className=\"login100-form-title\">{errorMessage}</span>\r\n           }\r\n            <div className=\"wrap-input100 validate-it\">\r\n              <input\r\n                className=\"input100\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Name\"\r\n                onBlur={nameBlurHandler}\r\n                onChange={nameChangedHandler}\r\n                value={enteredName}\r\n              />\r\n              <span className=\"focus-input100\"></span>\r\n              <span className=\"symbol-input100\">\r\n                <FaInstalod />\r\n              </span>\r\n            </div>\r\n            {nameInputHasError && (\r\n              <span className=\"txt1\" style={{ color: \"red\" }}>\r\n                Name is Required\r\n              </span>\r\n            )}\r\n            <div className=\"wrap-input100 validate-input\">\r\n              <input\r\n                className=\"input100\"\r\n                type=\"text\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                onBlur={emailBlurHandler}\r\n                onChange={emailChangedHandler}\r\n                value={enteredEmail}\r\n              />\r\n              <span className=\"focus-input100\"></span>\r\n              <span className=\"symbol-input100\">\r\n                <FaInstalod />\r\n              </span>\r\n            </div>\r\n            {emailInputHasError && (\r\n              <span className=\"txt1\" style={{ color: \"red\" }}>\r\n                Email is Required\r\n              </span>\r\n            )}\r\n            <div\r\n              className=\"wrap-input100 validate-input\"\r\n              data-validate=\"Password is required\"\r\n            >\r\n              <input\r\n                className=\"input100\"\r\n                type=\"password\"\r\n                name=\"pass\"\r\n                placeholder=\"Password\"\r\n                onBlur={PasswordBlurHandler}\r\n                onChange={PasswordChangedHandler}\r\n                value={enteredPassword}\r\n              />\r\n              <span className=\"focus-input100\"></span>\r\n              <span className=\"symbol-input100\">\r\n                <FaLock />\r\n              </span>\r\n            </div>\r\n            {InputPasswordHasError && (\r\n              <span className=\"txt1\" style={{ color: \"red\" }}>\r\n                Password is Required\r\n              </span>\r\n            )}\r\n            <div\r\n              className=\"wrap-input100 validate-input\"\r\n              data-validate=\"Password is required\"\r\n            >\r\n              <input\r\n                className=\"input100\"\r\n                type=\"password\"\r\n                name=\"passverify\"\r\n                placeholder=\"Password verify\"\r\n                onBlur={verifyPasswordBlurHandler}\r\n                onChange={verifyPasswordChangedHandler}\r\n                value={enteredVerifyPassword}\r\n              />\r\n              <span className=\"focus-input100\"></span>\r\n              <span className=\"symbol-input100\">\r\n                <FaLock />\r\n              </span>\r\n            </div>\r\n\r\n            {InputVerifyPasswordHasError && (\r\n              <span className=\"txt1\" style={{ color: \"red\" }}>\r\n                Password did't match\r\n              </span>\r\n            )}\r\n\r\n            <div className=\"container-login100-form-btn\">\r\n              <button className=\"login100-form-btn\">Register</button>\r\n            </div>\r\n\r\n            <div className=\"text-center p-t-12\">\r\n              <span className=\"txt1\">Have an acount?</span>\r\n              <a className=\"txt2\" onClick={()=>navigate(\"/login\")}>\r\n                Login\r\n              </a>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","D:\\food-delivery-app\\Frontend\\src\\components\\Order\\OrderDetail.js",["151"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"../../axois\";\r\nimport { getItemWithExpiry } from \"../../Helper/localStorageHelper\";\r\nimport OrderDetailItems from \"./OrderDetailItems\";\r\nimport classes from \"./Order.module.css\";\r\nimport { Card } from \"../UI/Card\";\r\n\r\nconst OrderDetail = (props) => {\r\n  const { orderId, priceI } = useParams();\r\n  const [orderitems, setOrderItems] = useState([]);\r\n  const fetchDetails = async () => {\r\n    try {\r\n      const res = await axios.get(\r\n        `/Order/ViewOrderItems.php?order_id=${orderId}`,\r\n        {\r\n          headers: {\r\n            Authorization: getItemWithExpiry(\"token\"),\r\n          },\r\n        }\r\n      );\r\n      setOrderItems(res.data.orderItems);\r\n      console.log(res.data.orderItems);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDetails();\r\n  }, [orderId]);\r\n\r\n  const ordersItemList = orderitems.map((or) => (\r\n    <OrderDetailItems\r\n      key={or.orderitem_id}\r\n      amount={parseInt(or.amount)}\r\n      name={or.name}\r\n      price={parseInt(or.price)}\r\n    />\r\n  ));\r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>{ordersItemList}\r\n      <li className={classes.meal}>\r\n      <div className={classes.price}> Grant Total:</div>\r\n      <div className={classes.price}> ${priceI}</div>\r\n      </li>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default OrderDetail;\r\n","D:\\food-delivery-app\\Frontend\\src\\components\\Order\\Order.js",[],"D:\\food-delivery-app\\Frontend\\src\\axois.js",[],"D:\\food-delivery-app\\Frontend\\src\\Store\\Cart-Context.js",[],"D:\\food-delivery-app\\Frontend\\src\\components\\Layout\\Button.js",["152","153","154"],"import React, { useContext, useEffect,useState } from \"react\";\r\nimport classes from \"./HeaderButton.module.css\";\r\n\r\n\r\n\r\nexport const Button = (props) => {\r\n  \r\n\r\n \r\n\r\n\r\n\r\n  return (\r\n    <button className={classes.button} onClick={props.onPress}>\r\n      <span>{props.name}</span>\r\n    </button>\r\n  );\r\n};\r\n","D:\\food-delivery-app\\Frontend\\src\\components\\Meals\\MealsSummary.js",[],"D:\\food-delivery-app\\Frontend\\src\\components\\Cart\\Checkout.js",[],"D:\\food-delivery-app\\Frontend\\src\\components\\Layout\\HeaderButton.js",["155"],"import React, { useContext, useEffect,useState } from \"react\";\r\nimport CartContext from \"../../Store/Cart-Context\";\r\nimport CartIcon from \"../Cart/CartIcon\";\r\nimport classes from \"./HeaderButton.module.css\";\r\n\r\nexport const HeaderButton = (props) => {\r\n  const cartctx = useContext(CartContext);\r\n  const [btnIsHighLighted,setBtnIsHighLighted]=useState(false);\r\n  const noOfCartItem = cartctx.items.reduce((curNumber, item) => {\r\n    return curNumber + item.amount;\r\n  }, 0);\r\n  const {items} = cartctx;\r\nconst btnClasses=`${classes.button} ${btnIsHighLighted ? classes.bump: ''} `;\r\n\r\nuseEffect(()=>{\r\n  if(cartctx.items.length===0){\r\n    return;\r\n  }\r\n  setBtnIsHighLighted(true);\r\n\r\n  const timer = setTimeout(()=>{\r\n    setBtnIsHighLighted(false);\r\n  },300);\r\n  \r\n\r\n  return ()=>{\r\n    clearTimeout(timer);\r\n  }\r\n},[items]);\r\n\r\n  return (\r\n    <button className={btnClasses} onClick={props.onClick}>\r\n      <span className={classes.icon}>\r\n        <CartIcon />\r\n      </span>\r\n      <span>Your Cart</span>\r\n      <span className={classes.badge}>{noOfCartItem}</span>\r\n    </button>\r\n  );\r\n};\r\n","D:\\food-delivery-app\\Frontend\\src\\components\\Cart\\CartItem.js",[],"D:\\food-delivery-app\\Frontend\\src\\components\\Order\\OrderDetailItems.js",[],"D:\\food-delivery-app\\Frontend\\src\\components\\Order\\Orderitem.js",[],"D:\\food-delivery-app\\Frontend\\src\\components\\Meals\\AvailableMeals.js",[],"D:\\food-delivery-app\\Frontend\\src\\Helper\\localStorageHelper.js",[],"D:\\food-delivery-app\\Frontend\\src\\components\\UI\\Modal.js",[],"D:\\food-delivery-app\\Frontend\\src\\components\\UI\\Card.js",[],"D:\\food-delivery-app\\Frontend\\src\\components\\hooks\\UseInput.js",[],"D:\\food-delivery-app\\Frontend\\src\\components\\Cart\\CartIcon.js",[],"D:\\food-delivery-app\\Frontend\\src\\components\\Meals\\Mealtems\\MealIteams.js",["156"],"import React, { useContext } from \"react\";\r\nimport { getItemWithExpiry } from \"../../../Helper/localStorageHelper\";\r\nimport CartContext from \"../../../Store/Cart-Context\";\r\nimport MealItemForm from \"./MealItemForm\";\r\nimport classes from \"./MealItems.module.css\";\r\n\r\n\r\nconst MealIteams = (props) => {\r\n    const price = `$ ${parseInt(props.price).toFixed(2)}`;\r\n    const cartCtx = useContext(CartContext);\r\n    const addToCartHandler=amount=>{\r\n      cartCtx.addItem({\r\n        id:props.id,\r\n        name:props.name,\r\n        amount:amount,\r\n        price: props.price\r\n      })\r\n\r\n    }\r\n  return (\r\n    <li className={classes.meal}>\r\n      <div>\r\n        <h3>{props.name}</h3>\r\n        <div className={classes.description}>{props.des}</div>\r\n        <div className={classes.price}>{price}</div>\r\n      </div>\r\n      <div>\r\n        <MealItemForm id={props.id} OnAddToCart={addToCartHandler}/>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MealIteams;\r\n","D:\\food-delivery-app\\Frontend\\src\\components\\Meals\\Mealtems\\MealItemForm.js",[],"D:\\food-delivery-app\\Frontend\\src\\components\\Meals\\Mealtems\\Input.js",[],{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":27},{"ruleId":"161","severity":1,"message":"165","line":16,"column":13,"nodeType":"163","messageId":"164","endLine":16,"endColumn":16},{"ruleId":"161","severity":1,"message":"165","line":33,"column":13,"nodeType":"163","messageId":"164","endLine":33,"endColumn":16},{"ruleId":"166","severity":1,"message":"167","line":55,"column":5,"nodeType":"168","endLine":55,"endColumn":7,"suggestions":"169"},{"ruleId":"170","severity":1,"message":"171","line":99,"column":21,"nodeType":"172","messageId":"173","endLine":99,"endColumn":23},{"ruleId":"170","severity":1,"message":"171","line":140,"column":21,"nodeType":"172","messageId":"173","endLine":140,"endColumn":23},{"ruleId":"170","severity":1,"message":"171","line":143,"column":21,"nodeType":"172","messageId":"173","endLine":143,"endColumn":23},{"ruleId":"170","severity":1,"message":"171","line":151,"column":21,"nodeType":"172","messageId":"173","endLine":151,"endColumn":23},{"ruleId":"174","severity":1,"message":"175","line":159,"column":8,"nodeType":"176","messageId":"177","endLine":159,"endColumn":28},{"ruleId":"161","severity":1,"message":"178","line":198,"column":9,"nodeType":"163","messageId":"164","endLine":198,"endColumn":20},{"ruleId":"179","severity":1,"message":"180","line":67,"column":9,"nodeType":"181","endLine":67,"endColumn":30},{"ruleId":"161","severity":1,"message":"182","line":39,"column":13,"nodeType":"163","messageId":"164","endLine":39,"endColumn":19},{"ruleId":"170","severity":1,"message":"171","line":40,"column":25,"nodeType":"172","messageId":"173","endLine":40,"endColumn":27},{"ruleId":"161","severity":1,"message":"183","line":17,"column":15,"nodeType":"163","messageId":"164","endLine":17,"endColumn":32},{"ruleId":"161","severity":1,"message":"184","line":26,"column":15,"nodeType":"163","messageId":"164","endLine":26,"endColumn":39},{"ruleId":"161","severity":1,"message":"185","line":35,"column":15,"nodeType":"163","messageId":"164","endLine":35,"endColumn":33},{"ruleId":"161","severity":1,"message":"186","line":9,"column":10,"nodeType":"163","messageId":"164","endLine":9,"endColumn":27},{"ruleId":"161","severity":1,"message":"165","line":16,"column":11,"nodeType":"163","messageId":"164","endLine":16,"endColumn":14},{"ruleId":"187","severity":1,"message":"188","line":173,"column":15,"nodeType":"181","endLine":173,"endColumn":71},{"ruleId":"187","severity":1,"message":"188","line":199,"column":15,"nodeType":"181","endLine":199,"endColumn":68},{"ruleId":"166","severity":1,"message":"189","line":31,"column":6,"nodeType":"168","endLine":31,"endColumn":15,"suggestions":"190"},{"ruleId":"161","severity":1,"message":"162","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":27},{"ruleId":"161","severity":1,"message":"191","line":1,"column":29,"nodeType":"163","messageId":"164","endLine":1,"endColumn":38},{"ruleId":"161","severity":1,"message":"192","line":1,"column":39,"nodeType":"163","messageId":"164","endLine":1,"endColumn":47},{"ruleId":"166","severity":1,"message":"193","line":29,"column":3,"nodeType":"168","endLine":29,"endColumn":10,"suggestions":"194"},{"ruleId":"161","severity":1,"message":"186","line":2,"column":10,"nodeType":"163","messageId":"164","endLine":2,"endColumn":27},"no-native-reassign",["195"],"no-negated-in-lhs",["196"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'res' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetch'. Either include it or remove the dependency array.","ArrayExpression",["197"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'LoadHandler' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'status' is assigned a value but never used.","'InputNameHasError' is assigned a value but never used.","'InputDescriptionHasError' is assigned a value but never used.","'InputPriceHasError' is assigned a value but never used.","'getItemWithExpiry' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'fetchDetails'. Either include it or remove the dependency array.",["198"],"'useEffect' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'cartctx.items.length'. Either include it or remove the dependency array.",["199"],"no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},"Update the dependencies array to be: [fetch]",{"range":"206","text":"207"},"Update the dependencies array to be: [fetchDetails, orderId]",{"range":"208","text":"209"},"Update the dependencies array to be: [cartctx.items.length, items]",{"range":"210","text":"211"},[1094,1096],"[fetch]",[931,940],"[fetchDetails, orderId]",[819,826],"[cartctx.items.length, items]"]